// src/components/ControlPanel/ControlPanel.jsx
import React, { useState } from 'react';
import './ControlPanel.css';
import { FaMapMarkerAlt, FaRoute, FaSlidersH, FaRocket, FaTrashAlt, FaDownload, FaUpload, FaChevronLeft, FaChevronRight, FaPrint, FaPlus, FaMinus } from 'react-icons/fa';

// --- –ù–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–π –ø–∞–Ω–µ–ª–∏ ---
const DropdownPanel = ({ isOpen, onClose, handlePointsGeoJSONUpload, handleGeoJSONUpload, downloadGeoJSON, clearRoutes }) => {
  if (!isOpen) return null;

  return (
    <div className="dropdown-panel-overlay" onClick={onClose}>
      <div className="dropdown-panel-content" onClick={(e) => e.stopPropagation()}>
        <div className="dropdown-panel-header">
          <span className="dropdown-panel-title">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</span>
          <button className="dropdown-panel-close" onClick={onClose}>√ó</button>
        </div>
        <div className="dropdown-panel-body">
          <FileUploadButton
            icon={<FaUpload />}
            label="–ò–º–ø–æ—Ä—Ç —Ç–æ—á–µ–∫"
            onFileUpload={handlePointsGeoJSONUpload}
            tooltip="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ—á–∫–∏ –∏–∑ GeoJSON —Ñ–∞–π–ª–∞"
          />
          <FileUploadButton
            icon={<FaUpload />}
            label="–ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤"
            onFileUpload={handleGeoJSONUpload}
            tooltip="–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã –∏–∑ GeoJSON —Ñ–∞–π–ª–∞"
          />
          <button
            className="modern-btn secondary"
            onClick={downloadGeoJSON}
            title="–°–∫–∞—á–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ GeoJSON"
          >
            <span className="btn-icon"><FaDownload /></span>
            <span className="btn-text">–≠–∫—Å–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤</span>
          </button>
          <button
            className="modern-btn danger"
            onClick={clearRoutes}
            title="–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã"
          >
            <span className="btn-icon"><FaTrashAlt /></span>
            <span className="btn-text">–û—á–∏—Å—Ç–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã</span>
          </button>
          <button
            className="modern-btn secondary"
            onClick={() => window.print()}
            title="–†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç—É –∏ –º–∞—Ä—à—Ä—É—Ç—ã"
          >
            <span className="btn-icon"><FaPrint /></span>
            <span className="btn-text">–ü–µ—á–∞—Ç—å</span>
          </button>
        </div>
      </div>
    </div>
  );
};
// --- –ö–æ–Ω–µ—Ü –Ω–æ–≤–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ---

const ControlPanel = ({
  groups = [],
  loadedGroups = [],
  onGroupAdd,
  onGroupRemove,
  roadGroups = [],
  loadedRoadGroups = [],
  onRoadGroupAdd,
  onRoadGroupRemove,
  onRoadsClear,
  showPoints,
  setShowPoints,
  showRoutes,
  setShowRoutes,
  showRoads,
  setShowRoads,
  showButtons, // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
  setShowButtons, // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
  buildRoute,
  clearRoutes,
  downloadGeoJSON,
  handleGeoJSONUpload,
  isSidePanelOpen,
  toggleSidePanel, // <-- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ (–∏–∑ App.jsx)
  handlePointsGeoJSONUpload,
}) => {
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);

  // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
  const toggleDropdown = () => {
    setIsDropdownOpen(!isDropdownOpen);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ (–∏–∑ –ø—Ä–æ–ø—Å–æ–≤)
  // const toggleSidePanel = () => { // <-- –£–î–ê–õ–ò–õ–ò –≠–¢–£ –°–¢–†–û–ö–£
  //   setShowButtons(!showButtons); // <-- –£–î–ê–õ–ò–õ–ò –≠–¢–£ –°–¢–†–û–ö–£
  // };                               // <-- –£–î–ê–õ–ò–õ–ò –≠–¢–£ –°–¢–†–û–ö–£

  return (
    <>
      <div className="modern-top-controls">
        <div className="controls-left">
          <div className="app-brand">
            <div className="app-logo">üó∫Ô∏è</div>
            <span className="app-name">–ö–∞—Ä—Ç–∞</span>
          </div>

          {/* –°–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ—Ä–æ–≥ */}
          <div className="control-group modern-select-wrapper">
            <select
              onChange={(e) => {
                if (e.target.value) {
                  onRoadGroupAdd(e.target.value);
                  e.target.value = ''; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
                }
              }}
              className="modern-select"
              disabled={loadedRoadGroups.length >= roadGroups.length}
            >
              <option value="">–î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –¥–æ—Ä–æ–≥</option>
              {roadGroups.filter(g => !loadedRoadGroups.includes(g)).map(group => (
                <option key={group} value={group}>
                  {group.replace('.geojson', '')}
                </option>
              ))}
            </select>
            <div className="select-arrow">+</div>
          </div>

          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–æ—Ä–æ–≥ —Å –∫–Ω–æ–ø–∫–æ–π —É–¥–∞–ª–µ–Ω–∏—è */}
          <div className="loaded-groups-list">
            {loadedRoadGroups.map(group => (
              <div key={group} className="loaded-group-item">
                <span className="group-name">{group.replace('.geojson', '')}</span>
                <button
                  className="remove-group-btn"
                  onClick={() => onRoadGroupRemove(group)}
                  title={`–£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É –¥–æ—Ä–æ–≥ ${group}`}
                >
                  <FaMinus />
                </button>
              </div>
            ))}
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –¥–æ—Ä–æ–≥ */}
          {loadedRoadGroups.length > 0 && (
            <button
              className="modern-btn danger"
              onClick={onRoadsClear}
              title="–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–æ—Ä–æ–≥–∏"
            >
              <span className="btn-icon"><FaTrashAlt /></span>
              <span className="btn-text">–û—á–∏—Å—Ç–∏—Ç—å –¥–æ—Ä–æ–≥–∏</span>
            </button>
          )}

          {/* –°–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ—á–µ–∫ */}
          <div className="control-group modern-select-wrapper">
            <select
              onChange={(e) => {
                if (e.target.value) {
                  onGroupAdd(e.target.value);
                  e.target.value = ''; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
                }
              }}
              className="modern-select"
              disabled={loadedGroups.length >= groups.length}
            >
              <option value="">–î–æ–±–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø—É —Ç–æ—á–µ–∫</option>
              {groups.filter(g => !loadedGroups.includes(g)).map(group => (
                <option key={group} value={group}>
                  {group.replace('.json', '')}
                </option>
              ))}
            </select>
            <div className="select-arrow">+</div>
          </div>

          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø —Ç–æ—á–µ–∫ —Å –∫–Ω–æ–ø–∫–æ–π —É–¥–∞–ª–µ–Ω–∏—è */}
          <div className="loaded-groups-list">
            {loadedGroups.map(group => (
              <div key={group} className="loaded-group-item">
                <span className="group-name">{group.replace('.json', '')}</span>
                <button
                  className="remove-group-btn"
                  onClick={() => onGroupRemove(group)}
                  title={`–£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É —Ç–æ—á–µ–∫ ${group}`}
                >
                  <FaMinus />
                </button>
              </div>
            ))}
          </div>

          {/* –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –£–ë–†–ê–ù–û */}
        </div>

        <div className="controls-center">
          <div className="visibility-controls modern-toggle-group">
            <ModernToggle
              icon={<FaMapMarkerAlt />}
              label="–¢–æ—á–∫–∏"
              checked={showPoints}
              onChange={setShowPoints}
              tooltip="–ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —Ç–æ—á–∫–∏"
            />
            <ModernToggle
              icon={<FaRoute />}
              label="–î–æ—Ä–æ–≥–∏"
              checked={showRoads}
              onChange={setShowRoads}
              tooltip="–ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –¥–æ—Ä–æ–≥–∏"
            />
            <ModernToggle
              icon={<FaRoute />}
              label="–ú–∞—Ä—à—Ä—É—Ç—ã"
              checked={showRoutes}
              onChange={setShowRoutes}
              tooltip="–ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã"
            />
            {/* –ö–Ω–æ–ø–∫–∞ "–ü–∞–Ω–µ–ª—å" —Ç–µ–ø–µ—Ä—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –º–µ–Ω—é */}
            <button
              className="modern-btn secondary dropdown-toggle"
              onClick={toggleDropdown} // <-- –í—ã–∑—ã–≤–∞–µ–º –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
              title="–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"
            >
              <span className="btn-icon"><FaSlidersH /></span>
              <span className="btn-text">–ü–∞–Ω–µ–ª—å</span>
            </button>
          </div>
        </div>

        <div className="controls-right">
          <div className="action-buttons">
            <ModernButton
              icon={<FaRocket />}
              label="–ü–æ—Å—Ç—Ä–æ–∏—Ç—å"
              onClick={buildRoute}
              variant="primary"
              tooltip="–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –º–µ–∂–¥—É –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏"
            />
            <ModernButton
              icon={<FaTrashAlt />}
              label="–û—á–∏—Å—Ç–∏—Ç—å"
              onClick={clearRoutes}
              variant="danger"
              tooltip="–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã"
            />
            <ModernButton
              icon={<FaPrint />}
              label="–ü–µ—á–∞—Ç—å"
              onClick={() => window.print()}
              variant="secondary"
              tooltip="–†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç—É –∏ –º–∞—Ä—à—Ä—É—Ç—ã"
            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ (—Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è) */}
          <button
            className={`panel-toggle ${showButtons ? 'open' : ''}`} // –ò—Å–ø–æ–ª—å–∑—É–µ–º showButtons –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            onClick={toggleSidePanel} // <-- –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –ø—Ä–æ–ø—Å–æ–≤
            title={showButtons ? "–°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å" : "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å"}
          >
            <span className="toggle-icon">
              {showButtons ? <FaChevronLeft /> : <FaChevronRight />}
            </span>
          </button>
        </div>
      </div>

      {/* –†–µ–Ω–¥–µ—Ä–∏–º –≤—Å–ø–ª—ã–≤–∞—é—â—É—é –ø–∞–Ω–µ–ª—å */}
      <DropdownPanel
        isOpen={isDropdownOpen}
        onClose={() => setIsDropdownOpen(false)}
        handlePointsGeoJSONUpload={handlePointsGeoJSONUpload}
        handleGeoJSONUpload={handleGeoJSONUpload}
        downloadGeoJSON={downloadGeoJSON}
        clearRoutes={clearRoutes}
      />
    </>
  );
};

const ModernToggle = ({ icon, label, checked, onChange, tooltip }) => (
  <div className="modern-toggle" title={tooltip}>
    <input
      type="checkbox"
      id={`toggle-${label}`}
      checked={checked}
      onChange={(e) => onChange(e.target.checked)}
      className="toggle-input"
    />
    <label htmlFor={`toggle-${label}`} className="toggle-label">
      <span className="toggle-icon">{icon}</span>
      <span className="toggle-text">{label}</span>
    </label>
  </div>
);

const ModernButton = ({ icon, label, onClick, variant = 'secondary', tooltip }) => (
  <button
    className={`modern-btn ${variant}`}
    onClick={onClick}
    title={tooltip}
  >
    <span className="btn-icon">{icon}</span>
    <span className="btn-text">{label}</span>
  </button>
);

// --- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç FileUploadButton ---
const FileUploadButton = ({ icon, label, onFileUpload, tooltip }) => (
  <label className="modern-btn secondary file-upload" title={tooltip}>
    <span className="btn-icon">{icon}</span>
    <span className="btn-text">{label}</span>
    <input
      type="file"
      accept=".geojson,.json"
      onChange={onFileUpload}
      className="file-input"
    />
  </label>
);


export default ControlPanel;