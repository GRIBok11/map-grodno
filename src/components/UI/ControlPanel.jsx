import React from 'react';
import '/src/styles/App.css';

const ControlPanel = ({
  groups,
  currentGroup,
  onGroupChange,
  showPoints,
  setShowPoints,
  showRoutes,
  setShowRoutes,
  showButtons,
  setShowButtons,
  searchQuery,
  setSearchQuery,
  buildRoute,
  clearRoutes,
  downloadGeoJSON,
  handleGeoJSONUpload,
  isSidePanelOpen,
  toggleSidePanel
}) => {
  return (
    <div id="top-controls">
      <div className="logo">
        <span>üó∫Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏</span>
      </div>
      
      <div className="control-group">
        <div className="control-group-title">–ì—Ä—É–ø–ø–∞ —Ç–æ—á–µ–∫:</div>
        <select 
          value={currentGroup}
          onChange={(e) => onGroupChange(e.target.value)}
        >
          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É —Ç–æ—á–µ–∫</option>
          {groups.map(group => (
            <option key={group} value={group}>
              {group.replace('.json', '')}
            </option>
          ))}
        </select>
      </div>
      
      <div className="control-group">
        <div className="control-group-title">–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</div>
        <div className="visibility-controls">
          <label 
            className={`icon-toggle ${showPoints ? 'active' : ''}`}
            title="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ—á–∫–∏"
          >
            <input 
              type="checkbox" 
              checked={showPoints}
              onChange={(e) => setShowPoints(e.target.checked)}
            />
            <span className="toggle-icon">üìç</span>
            <span className="toggle-label">–¢–æ—á–∫–∏</span>
          </label>
          <label 
            className={`icon-toggle ${showRoutes ? 'active' : ''}`}
            title="–ü–æ–∫–∞–∑–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã"
          >
            <input 
              type="checkbox" 
              checked={showRoutes}
              onChange={(e) => setShowRoutes(e.target.checked)}
            />
            <span className="toggle-icon">üõ£Ô∏è</span>
            <span className="toggle-label">–ú–∞—Ä—à—Ä—É—Ç—ã</span>
          </label>
          <label 
            className={`icon-toggle ${showButtons ? 'active' : ''}`}
            title="–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤"
          >
            <input 
              type="checkbox" 
              checked={showButtons}
              onChange={(e) => setShowButtons(e.target.checked)}
            />
            <span className="toggle-icon">‚öôÔ∏è</span>
            <span className="toggle-label">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</span>
          </label>
        </div>
      </div>
      
      {showButtons && (
        <div className="control-group">
          <div className="control-group-title">–î–µ–π—Å—Ç–≤–∏—è:</div>
          <div className="icon-button-group">
            <button 
              className="icon-button" 
              onClick={buildRoute}
              title="–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç"
            >
              <span className="button-text">‚û°Ô∏è</span>
            </button>
            <button 
              className="icon-button danger" 
              onClick={clearRoutes}
              title="–û—á–∏—Å—Ç–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã"
            >
              <span className="button-text">üóëÔ∏è</span>
            </button>
            <button 
              className="icon-button" 
              onClick={downloadGeoJSON}
              title="–°–∫–∞—á–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã –≤ GeoJSON"
            >
              <span className="button-text">üì•</span>
            </button>
            <label className="icon-button" title="–ó–∞–≥—Ä—É–∑–∏—Ç—å GeoJSON">
              <span className="button-text">üì§</span>
              <input 
                type="file" 
                accept=".geojson,.json" 
                onChange={handleGeoJSONUpload}
                style={{display: 'none'}}
              />
            </label>
          </div>
        </div>
      )}
      
      <div className="control-group">
        <div className="control-group-title">–ü–æ–∏—Å–∫:</div>
        <input 
          type="text" 
          placeholder="–ü–æ–∏—Å–∫ –ø–æ –∞–¥—Ä–µ—Å—É –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é" 
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
        />
      </div>

      <button 
        className="toggle-side-panel-btn"
        onClick={toggleSidePanel}
        title={isSidePanelOpen ? "–°–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å"}
      >
        {isSidePanelOpen ? "‚óÄ" : "‚ñ∂"}
      </button>
    </div>
  );
};

export default ControlPanel;